%h1= resource.name
      
- if resource == current_user
  .section
    = link_to 'Edit profile', edit_resource_path
    
.row    
  .span8
    %h3
      Rating:
      %span#rating{:data => {:default => resource.current_rank}}= '%0.2f' % resource.current_rank
    %p
      (&mu;=
      %span#skill_mean{:data => {:default => resource.current_rating.mean}}= '%0.2f' % resource.current_rating.mean
      , &sigma;=
      %span#skill_deviation{:data => {:default => resource.current_rating.deviation}}= '%0.2f' % resource.current_rating.deviation
      )
      
  .span8
    %h3 Leagues
    - if resource.leagues.empty?
      %em #{resource.name} isn't in any leagues yet
    - else
      =raw resource.leagues.collect{|league| link_to league.name, league}.join(', ')
    
.row
  .span16
    #fig{:style => 'height: 300px'}

:coffeescript
  $ ->
    data = #{resource.players.order('players.created_at ASC').collect{|p| [p.created_at.to_i * 1000, Player.rank(p.rating), p.skill_mean]}.to_json}
    $.plot $('#fig'), [data],
      series:
        lines:
          show: true
          fill: true
        points:
          show: true
      xaxis:
        mode: 'time'
        timeformat: '%b %d'
      grid:
        hoverable: true
        mouseActiveRadius: 25
                
    $('#fig').bind 'plothover', (event, pos, item) ->
      if item
        # highilight(item.series, item.datapoint)
        $('#rating').text(item.datapoint[1].toFixed(2))
        $('#skill_mean').text(item.datapoint[2].toFixed(2))
        $('#skill_deviation').text(((item.datapoint[2] - item.datapoint[1]) / 3).toFixed(2))
      else
        $('#rating').text($('#rating').data('default').toFixed(2))
        $('#skill_mean').text($('#skill_mean').data('default').toFixed(2))
        $('#skill_deviation').text($('#skill_deviation').data('default').toFixed(2))
      
.row
  .span8
    %h3= pluralize resource.wins_count, 'Win'
    = render :partial => 'games/game', :collection => resource.wins.order('games.created_at DESC')
  .span8
    %h3= pluralize resource.losses_count, 'Loss'
    = render :partial => 'games/game', :collection => resource.losses.order('games.created_at DESC')
      